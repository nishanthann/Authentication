# React Authentication System

A full-stack authentication system built with **React** (frontend) and **Node.js/Express** (backend), featuring email verification, password reset, protected routes, and a modern UI.

---

## Features

- User registration with email verification
- Secure login/logout with JWT authentication
- Password reset via email
- Protected dashboard for authenticated users
- Responsive, animated UI with Tailwind CSS and Framer Motion
- Toast notifications for user feedback
- MongoDB database integration

---

## Technologies Used

**Frontend:**

- React
- Vite
- Zustand (state management)
- React Router DOM (routing)
- Axios (API requests)
- Tailwind CSS (styling)
- Framer Motion (animations)
- Lucide React (icons)
- React Hot Toast (notifications)

**Backend:**

- Node.js
- Express
- MongoDB (Mongoose)
- bcryptjs (password hashing)
- jsonwebtoken (JWT authentication)
- dotenv (environment variables)
- Mailtrap (email testing)

---

## Getting Started

### Prerequisites

- Node.js & npm
- MongoDB (local or Atlas)
- Mailtrap account (for email testing)

### Installation

1. **Clone the repository:**

   ```bash
   git clone https://github.com/yourusername/auth-page.git
   cd auth-page
   ```

2. **Backend Setup:**

   ```bash
   cd backend
   npm install
   ```

   - Create a `.env` file with:

     ```
     MONGO_URI=your_mongodb_connection_string
     JWT_SECRET=your_jwt_secret
     MAILTRAP_USER=your_mailtrap_username
     MAILTRAP_PASS=your_mailtrap_password
     ```

   - Start the backend server:
     ```bash
     npm start
     ```

3. **Frontend Setup:**

   ```bash
   cd ../frontend
   npm install
   npm run dev
   ```

   - The frontend will run on [http://localhost:5173](http://localhost:5173) by default.

---

## Usage

- **Sign Up:** Register with your name, email, and password.
- **Email Verification:** Enter the code sent to your email to verify your account.
- **Login:** Access your dashboard after verification.
- **Forgot Password:** Request a password reset link via email.
- **Reset Password:** Set a new password using the link sent to your email.
- **Dashboard:** View your profile and log out securely.

---

## Folder Structure

```
auth-page/
├── backend/
│   ├── controllers/
│   ├── db/
│   ├── mailtrap/
│   ├── middleware/
│   ├── models/
│   ├── routes/
│   ├── index.js
│   └── .env
├── frontend/
│   ├── src/
│   │   ├── components/
│   │   ├── pages/
│   │   ├── store/
│   │   ├── utils/
│   │   ├── App.jsx
│   │   └── main.jsx
│   ├── package.json
│   ├── vite.config.js
│   └── index.html
```

---

## Security Notes

- JWTs are stored in secure, httpOnly cookies.
- Passwords are hashed before storage.
- Rate limiting and input validation are recommended for production.
- Use HTTPS and a production email service for deployment.

---

## License

This project is licensed under the MIT License.

---

## Contributing

Pull requests are welcome! For major changes, please open an issue first to discuss what you would like to change.

---

## Contact

For questions or feedback, open an issue or contact [your-email@example.com](mailto:nizhanth23@gmail.com).
